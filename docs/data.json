{
    "project": {
        "name": "a-configuration",
        "description": "For quick configurations based on a set file structure",
        "version": "1.1.0",
        "url": "https://github.com/aetherwalker/a-configuration#readme"
    },
    "files": {
        "lib\\index.js": {
            "name": "lib\\index.js",
            "modules": {
                "a-configuration": 1
            },
            "classes": {
                "Configuration": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "a-configuration": {
            "name": "a-configuration",
            "submodules": {},
            "elements": {},
            "classes": {
                "Configuration": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib\\index.js",
            "line": 3,
            "description": "Configurations load in 2 stages.\n\nThe first stage is a blocking file read to provide base data for the application and base configurations\nas described by the system.\n\nThe second stage is to load data from extended data sources in a non-blocking fashion. A `_await`\nproperty is provided as a Promise to allow for waiting for the full configuration load if desired. \n\nNote that as this extends an EventEmitter, colliding key names should be avoided, such as \"on\" and\n\"once\". Due to the nature of the EventEmitter properties and for simplicity, Configuration merely\nextends the EventEmitter class so that `configuration.on` and similar methods are simply available\nwithout needing to remember referencing such as `configuration._events.on`, however the extended\nevent emitted is also available as _events to allow for key collision if needed.\n\nAdditionally, this module binds a listener to the \"SIGHUP\" Process Event to trigger configuration\nreload events.",
            "itemtype": "main",
            "extends": "EventEmitter",
            "is_constructor": 1,
            "static": 1
        }
    },
    "classes": {
        "Configuration": {
            "name": "Configuration",
            "shortname": "Configuration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "a-configuration",
            "namespace": "",
            "file": "lib\\index.js",
            "line": 3,
            "description": "Configurations load in 2 stages.\n\nThe first stage is a blocking file read to provide base data for the application and base configurations\nas described by the system.\n\nThe second stage is to load data from extended data sources in a non-blocking fashion. A `_await`\nproperty is provided as a Promise to allow for waiting for the full configuration load if desired. \n\nNote that as this extends an EventEmitter, colliding key names should be avoided, such as \"on\" and\n\"once\". Due to the nature of the EventEmitter properties and for simplicity, Configuration merely\nextends the EventEmitter class so that `configuration.on` and similar methods are simply available\nwithout needing to remember referencing such as `configuration._events.on`, however the extended\nevent emitted is also available as _events to allow for key collision if needed.\n\nAdditionally, this module binds a listener to the \"SIGHUP\" Process Event to trigger configuration\nreload events.",
            "mainName": "",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "lib\\index.js",
            "line": 36,
            "description": "Provides a reference to the extended event emitter to allow for key collisions\noff of the configuration object itself.",
            "itemtype": "property",
            "name": "_emitter",
            "type": "EventEmitter",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 44,
            "description": "Maps event names to their current name for consistency.",
            "itemtype": "property",
            "name": "_events",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 55,
            "description": "Tracks included javascript file configurations so that reloads can be triggered\nvia their functional invocations.",
            "itemtype": "property",
            "name": "loaded",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 64,
            "description": "Called after the first completion of the second load stage.",
            "itemtype": "method",
            "name": "initialized.success",
            "access": "private",
            "tagname": "",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 69,
            "description": "Called if the first completion of the second load stage resulted in an exception.",
            "itemtype": "method",
            "name": "initialized.failure",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "exception",
                    "description": "The thrown exception",
                    "type": "Error"
                }
            ],
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 77,
            "description": "Called after the first completion of the second load stage.",
            "itemtype": "property",
            "name": "_await",
            "type": "Promise",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 89,
            "itemtype": "method",
            "name": "readJSON",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 111,
            "itemtype": "method",
            "name": "getExt",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File name or complete file path.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 122,
            "itemtype": "method",
            "name": "loadFailed",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "exception",
                    "description": "",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 130,
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "conf",
                    "description": "This configuration that finished loading.",
                    "type": "Configuration"
                }
            ],
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 144,
            "itemtype": "method",
            "name": "loadFailed",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "exception",
                    "description": "",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 152,
            "description": "Thrown in the case of an error in any stage.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "conf",
                    "description": "This configuration that finished loading.",
                    "type": "Configuration"
                },
                {
                    "name": "error",
                    "description": "Thrown exception",
                    "type": "Error"
                }
            ],
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 167,
            "itemtype": "method",
            "name": "loadConfigurations",
            "access": "private",
            "tagname": "",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 175,
            "itemtype": "method",
            "name": "loadFile",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "file",
                    "description": "Filename to load.",
                    "type": "String"
                }
            ],
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 213,
            "itemtype": "method",
            "name": "resolveConfiguration",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "conf",
                    "description": "Configuration to resolve against the current export.",
                    "type": "Object"
                }
            ],
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 313,
            "description": "When true, the configuration is updating its values. This does not block\nthe values from being used, but does indicate that the module is busy and\noperations that would cause further updates should be blocked.",
            "itemtype": "property",
            "name": "reloading",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 323,
            "description": "Indicate if the configuration module is currently updating.\n\nThis currently responds to the following states:  \n+ reloading",
            "itemtype": "method",
            "name": "isLocked",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Configuration",
            "module": "a-configuration"
        },
        {
            "file": "lib\\index.js",
            "line": 337,
            "description": "Update the configurations.\n\nThis will cause all configuration sources to be read again and then applied\nover the current configuration. Which will change values that exist but will\nin general not delete values.\n\nSpecifically this will not remove values at the first, or second level due to\nthe way in which the configurations are assembled. Keys at the third level or\ndeeper will fall off _IF_ the second level key has an update applied.",
            "itemtype": "method",
            "name": "_reload",
            "return": {
                "description": "Resolves with the final status of the configuration loading;\n\t\tSee: \"loaded\" and \"error\" events.",
                "type": "Promise"
            },
            "class": "Configuration",
            "module": "a-configuration"
        }
    ],
    "warnings": []
}